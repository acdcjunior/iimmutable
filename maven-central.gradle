apply plugin: 'maven'
apply plugin: 'signing'

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}
signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Java6 Functional Programming'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'Simple classes to support functional programming in Java 6'
                url 'https://github.com/acdcjunior/java6-functional-programming'

                scm {
                    connection = 'scm:git:git@github.com:acdcjunior/java6-functional-programming.git'
                    developerConnection = 'scm:git:git@github.com:acdcjunior/java6-functional-programming.git'
                    url = 'git@github.com:acdcjunior/java6-functional-programming.git'
                }

                licenses {
                    license {
                        name 'MIT License'
                        url 'https://github.com/acdcjunior/java6-functional-programming/blob/master/LICENSE'
                    }
                }

                developers {
                    developer {
                        id 'acdcjunior'
                        name 'Antonio "acdc" Jr.'
                        email 'acdcjunior@gmail.com'
                    }
                }
            }
        }
    }
}